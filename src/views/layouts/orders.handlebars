<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ordenes</title>
</head>
<body style="font-family: Arial, sans-serif; background-color: #f5f5f5; color: #333; padding: 20px;">
    <h1 style="text-align: center; color: #007bff;">Ordenes</h1>

    <ul style="list-style-type: none; padding: 0;">
        {{#each orders}}
        <li style="background-color: #fff; padding: 15px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); margin-bottom: 20px;">
            <strong>Usuario:</strong> <span id="user-nombre-{{this._id}}">{{this.user.nombre}}</span> <br>
            <strong>Direccion:</strong> <span id="user-direccion-{{this._id}}">{{this.user.direccion}}</span> <br>
            <strong>Telefono:</strong> <span id="user-telefono-{{this._id}}">{{this.user.telefono}}</span> <br>
            <strong>Metodo de pago:</strong> <span id="metodo-pago-{{this._id}}">{{this.metodoDePago}}</span> <br>
            <strong>Total:</strong> <span id="total-{{this._id}}">${{this.cart.total}}</span> <br>
            <strong>Productos:</strong>
        <ul>
            {{#each this.cart.products}}
                <li>Nombre: {{this.product.tittle}} - Cantidad: {{this.quantity}} - Precio: ${{this.product.price}}</li>
            {{/each}}
        </ul> <br>
            <strong>Estado de la orden:</strong><span id="metodo-pago-{{this._id}}">{{this.estado}}</span> <br>

            <!-- Botón para eliminar producto, solo para administradores -->
            <button onclick="deleteOrder('{{this._id}}')" style="margin-top: 10px; padding: 8px 12px; background-color: #dc3545; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
                Eliminar orden
            </button>

            <!-- Botón para actualizar producto -->
            <button onclick="toggleUpdateForm('{{this._id}}')" style="margin-top: 10px; padding: 8px 12px; background-color: #007bff; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
                Modificar orden
            </button>

        <!-- Formulario para actualizar producto (oculto por defecto) -->
            <form id="update-form-{{this._id}}" onsubmit="updateOrder('{{this._id}}'); return false;" style="display: none; margin-top: 10px; padding: 15px; border: 1px solid #ddd; border-radius: 8px; background-color: #f9f9f9;">
    <h3 style="margin-top: 0; margin-bottom: 10px; color: #007bff;">Modificar orden</h3>
    <div style="display: flex; flex-direction: column; gap: 10px;">
        <label for="tittle-{{this._id}}" style="font-weight: bold;">Nombre:</label>
        <input type="text" id="tittle-{{this._id}}" value="{{this.user.nombre}}" required
            style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">

        <label for="description-{{this._id}}" style="font-weight: bold;">Direccion:</label>
        <input type="text" id="description-{{this._id}}" value="{{this.user.direccion}}" required
            style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">

        <label for="stock-{{this._id}}" style="font-weight: bold;">Telefono:</label>
        <input type="number" id="stock-{{this._id}}" value="{{this.user.telefono}}" required
            style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">

        <label for="price-{{this._id}}" style="font-weight: bold;">Precio total:</label>
        <input type="number" id="price-{{this._id}}" value="{{this.cart.total}}" required
            style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">

        <label for="code-{{this._id}}" style="font-weight: bold;">Estado:</label>
        <input type="text" id="code-{{this._id}}" value="{{this.estado}}" required
            style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">

        <!-- Agregar productos -->
        <label style="font-weight: bold;">Productos:</label>
        {{#each this.cart.products}}
            <div style="margin-bottom: 10px;">
                <strong>Producto: </strong> {{this.product.tittle}} <br>
                <label for="product-quantity-{{this.product._id}}" style="font-weight: bold;">Cantidad:</label>
                <input type="number" id="product-quantity-{{this.product._id}}" value="{{this.quantity}}" required
                    style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">

                <label for="product-price-{{this.product._id}}" style="font-weight: bold;">Precio:</label>
                <input type="number" id="product-price-{{this.product._id}}" value="{{this.product.price}}" required
                    style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
            </div>
        {{/each}}

        <label for="metodoDePago-{{this._id}}" style="font-weight: bold;">Método de pago:</label>
        <select id="metodoDePago-{{this._id}}" required style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
            <option value="Efectivo" {{#if (eq this.metodoDePago 'Efectivo')}}selected{{/if}}>Efectivo</option>
            <option value="Mercado pago" {{#if (eq this.metodoDePago 'Mercado pago')}}selected{{/if}}>Mercado pago</option>
        </select>

        <button type="submit" style="margin-top: 10px; padding: 10px 15px; background-color: #28a745; color: #fff; border: none; border-radius: 4px; cursor: pointer;">Actualizar Orden</button>
    </div>
</form>
            </li>
        {{/each}}
    </ul>

    <div class="pagination" style="text-align: center; margin-top: 20px;">
        {{#if hasPrevPage}}
            <a href="{{prevLink}}" style="padding: 8px 12px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 4px; margin-right: 10px;">Anterior</a>
        {{/if}}

        <!-- Mostrar página actual -->
        <span style="font-size: 16px; color: #333;">Página {{currentPage}} de {{totalPages}}</span>

        {{#if hasNextPage}}
            <a href="{{nextLink}}" style="padding: 8px 12px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 4px; margin-left: 10px;">Siguiente</a>
        {{/if}}
    </div>

    <script>

        function deleteOrder(orderId) {
            const token = localStorage.getItem('token'); // Obtener el token almacenado en localStorage

            fetch(`/api/order/${orderId}`, { 
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => { throw new Error(data.error || 'Error desconocido'); });
                }
                return response.json();
            })
            .then(data => {
                console.log('Orden eliminada:', data);
                alert('Orden eliminada correctamente');
                location.reload(); // Recargar la página para actualizar la lista de productos
            })
            .catch(error => {
                console.error('Error al eliminar la orden', error);
                alert('Error al eliminar la orden');
            });
        }

        function toggleUpdateForm(orderId) {
            const form = document.getElementById(`update-form-${orderId}`);
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        function updateOrder(orderId) {
            const nombre = document.getElementById(`user-nombre-${orderId}`).textContent;
            const direccion = document.getElementById(`user-direccion-${orderId}`).textContent;
            const telefono = document.getElementById(`user-telefono-${orderId}`).textContent;
            const metodoDePago = document.getElementById(`metodo-pago-${orderId}`).textContent;
            const total = parseFloat(document.getElementById(`total-${orderId}`).textContent.replace('$', ''));
            const estado = document.getElementById(`estado-${orderId}`).textContent;

            console.log(nombre, direccion, telefono, metodoDePago, total, estado);
            // Verificar que todos los campos estén completos
            if (!nombre || !direccion || !telefono || !metodoDePago || !total || !estado) {
                alert('Todos los campos son requeridos');
                return;
            }

            const orderData = { nombre, direccion, telefono, metodoDePago, total, estado };

            fetch(`/api/order/${orderId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(orderData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => { throw new Error(data.error || 'Error desconocido'); });
                }
                return response.json();
            })
            .then(data => {
                console.log('Producto actualizado:', data);
                alert('Producto actualizado con éxito');
                location.reload();  // Recargar la página
            })
            .catch(error => {
                console.error('Error al actualizar el producto:', error);
                alert('Error al actualizar el producto: ' + error.message);
            });
        }
    </script>
</body>
</html>
