<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ordenes</title>
</head>
<body style="font-family: Arial, sans-serif; background-color: #f5f5f5; color: #333; padding: 20px;">
    <h1 style="text-align: center; color: #007bff;">Ordenes</h1>

    <ul style="list-style-type: none; padding: 0;">
        {{#each orders}}
        <li style="background-color: #fff; padding: 15px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); margin-bottom: 20px;">
            <strong>Usuario:</strong> <span id="user-nombre-{{this._id}}">{{this.user.nombre}}</span> <br>
            <strong>Direccion:</strong> <span id="user-direccion-{{this._id}}">{{this.user.direccion}}</span> <br>
            <strong>Telefono:</strong> <span id="user-telefono-{{this._id}}">{{this.user.telefono}}</span> <br>
            <strong>Metodo de pago:</strong> <span id="metodo-pago-{{this._id}}">{{this.metodoDePago}}</span> <br>
            <strong>Total:</strong> <span id="total-{{this._id}}">${{this.cart.total}}</span> <br>
            <strong>Productos:</strong>
        <ul>
            {{#each this.cart.products}}
                <li>Id del producto: {{this.product}} - Cantidad: {{this.quantity}} - Precio: ${{this.price}}</li>
            {{/each}}
        </ul> <br>
            <strong>Estado de la orden:</strong><span id="metodo-pago-{{this._id}}">{{this.estado}}</span> <br>

            <!-- Botón para eliminar producto, solo para administradores -->
            <button onclick="deleteOrder('{{this._id}}')" style="margin-top: 10px; padding: 8px 12px; background-color: #dc3545; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
                Eliminar orden
            </button>

            <!-- Botón para actualizar producto -->
            <button onclick="toggleUpdateForm('{{this._id}}')" style="margin-top: 10px; padding: 8px 12px; background-color: #007bff; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
                Modificar orden
            </button>

        <!-- Formulario para actualizar producto (oculto por defecto) -->
            <form id="update-form-{{this._id}}" style="max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
    <h2 style="text-align: center; color: #333;">Actualizar Orden</h2>

    <label for="estado-{{this._id}}" style="font-weight: bold; margin-bottom: 5px;">Estado:</label>
<select id="estado-{{this._id}}" required style="width: 100%; padding: 10px; margin: 5px 0 15px; border: 1px solid #ccc; border-radius: 4px;">
    <option value="Pendiente" {{#if (eq this.estado 'Pendiente')}}selected{{/if}}>Pendiente</option>
    <option value="En camino" {{#if (eq this.estado 'En camino')}}selected{{/if}}>En camino</option>
    <option value="Realizada" {{#if (eq this.estado 'Realizada')}}selected{{/if}}>Realizada</option>
    <option value="Cancelada" {{#if (eq this.estado 'Cancelada')}}selected{{/if}}>Cancelada</option>
</select>
<!-- Muestra el color según el estado -->
<span style="
    display: inline-block;
    margin-top: 5px;
    padding: 5px 10px;
    border-radius: 4px;
    font-weight: bold;
    color: {{#if (eq this.estado 'Pendiente')}}black{{else if (eq this.estado 'En camino')}}white{{else if (eq this.estado 'Realizada')}}white{{else}}white{{/if}};
    background-color: {{#if (eq this.estado 'Pendiente')}}yellow{{else if (eq this.estado 'En camino')}}blue{{else if (eq this.estado 'Realizada')}}green{{else}}red{{/if}};
">
    {{this.estado}}
</span>


    <button type="button" onclick="updateOrder('{{this._id}}')" style="margin-top: 20px; padding: 12px 18px; background-color: #28a745; color: #fff; border: none; border-radius: 4px; cursor: pointer; width: 100%; font-size: 16px;">Actualizar Orden</button>
</form>
            </li>
        {{/each}}
    </ul>

    <div class="pagination" style="text-align: center; margin-top: 20px;">
        {{#if hasPrevPage}}
            <a href="{{prevLink}}" style="padding: 8px 12px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 4px; margin-right: 10px;">Anterior</a>
        {{/if}}

        <!-- Mostrar página actual -->
        <span style="font-size: 16px; color: #333;">Página {{currentPage}} de {{totalPages}}</span>

        {{#if hasNextPage}}
            <a href="{{nextLink}}" style="padding: 8px 12px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 4px; margin-left: 10px;">Siguiente</a>
        {{/if}}
    </div>

    <script>

        function deleteOrder(orderId) {
            const token = localStorage.getItem('token'); // Obtener el token almacenado en localStorage

            fetch(`/api/order/${orderId}`, { 
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => { throw new Error(data.error || 'Error desconocido'); });
                }
                return response.json();
            })
            .then(data => {
                console.log('Orden eliminada:', data);
                alert('Orden eliminada correctamente');
                location.reload(); // Recargar la página para actualizar la lista de productos
            })
            .catch(error => {
                console.error('Error al eliminar la orden', error);
                alert('No tienes permisos para esta accion.');
            });
        }

        function toggleUpdateForm(orderId) {
            const form = document.getElementById(`update-form-${orderId}`);
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        function updateOrder(orderId) {
    const estado = document.getElementById(`estado-${orderId}`).value;

    // Crear objeto de datos
    const orderData = {
        estado
    };

    // Enviar al backend
    fetch(`/api/order/${orderId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(orderData)
    })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al actualizar la orden.');
            }
            return response.json();
        })
        .then(data => {
            alert('Orden actualizada exitosamente.');
            location.reload();
        })
        .catch(error => {
            console.error('Error:', error);
            alert('No tienes permiso para esta accion.');
        });
}   
    </script>
</body>
</html>
